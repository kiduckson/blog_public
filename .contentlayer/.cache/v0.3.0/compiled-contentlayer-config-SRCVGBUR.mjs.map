{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport readingTime from \"reading-time\";\n\nimport remarkGfm from \"remark-gfm\";\nimport rehypeSlug from \"rehype-slug\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypeCodeTitles from \"rehype-code-titles\";\nimport rehypePrism from \"rehype-prism-plus\";\nimport { rehypeAccessibleEmojis } from \"rehype-accessible-emojis\";\n\nconst getLocale = (path: string): string => {\n  const pathArray = path.split(\".\");\n  return pathArray.length > 2 ? pathArray.slice(-2)[0] : \"en\";\n};\nconst getSlug = (path: string): string => {\n  const pathArray = path.split(\".\");\n  return pathArray[0];\n};\n\nexport const Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: \"**/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", description: \"The title of the post\", required: true },\n    author: { type: \"string\", description: \"The Author of the post\", required: true },\n    publishedAt: { type: \"string\", required: true },\n    description: { type: \"string\", required: true },\n    cover: { type: \"string\", required: false },\n  },\n  computedFields: {\n    locale: {\n      type: \"string\",\n      resolve: (post) => {\n        return getLocale(post._raw.sourceFilePath);\n      },\n    },\n    readingTime: {\n      type: \"json\",\n      resolve: (post) => readingTime(post.body.raw),\n    },\n    slug: {\n      type: \"string\",\n      resolve: (post) => getSlug(`${post._raw.flattenedPath}`),\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"posts\",\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      rehypeCodeTitles,\n      rehypePrism,\n      rehypeAutolinkHeadings,\n      rehypeAccessibleEmojis,\n    ],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,iBAAiB;AAExB,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,iBAAiB;AACxB,SAAS,8BAA8B;AAEvC,IAAM,YAAY,CAAC,SAAyB;AAC1C,QAAM,YAAY,KAAK,MAAM,GAAG;AAChC,SAAO,UAAU,SAAS,IAAI,UAAU,MAAM,EAAE,EAAE,CAAC,IAAI;AACzD;AACA,IAAM,UAAU,CAAC,SAAyB;AACxC,QAAM,YAAY,KAAK,MAAM,GAAG;AAChC,SAAO,UAAU,CAAC;AACpB;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,aAAa,yBAAyB,UAAU,KAAK;AAAA,IAC9E,QAAQ,EAAE,MAAM,UAAU,aAAa,0BAA0B,UAAU,KAAK;AAAA,IAChF,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,OAAO,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,EAC3C;AAAA,EACA,gBAAgB;AAAA,IACd,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,SAAS,CAAC,SAAS;AACjB,eAAO,UAAU,KAAK,KAAK,cAAc;AAAA,MAC3C;AAAA,IACF;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,YAAY,KAAK,KAAK,GAAG;AAAA,IAC9C;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,QAAQ,GAAG,KAAK,KAAK,eAAe;AAAA,IACzD;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
